/**
* 4-way 16-bit multiplexor:
* out = a if sel == 00
*       b if sel == 01
*       c if sel == 10
*       d if sel == 11
*/

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux(a=a[0], b=b[0], sel=sel[0], out=a0muxb0);
    Mux(a=c[0], b=d[0], sel=sel[0], out=c0muxd0);
    Mux(a=a0muxb0, b=c0muxd0, sel=sel[1], out=out[0]);

    Mux(a=a[1], b=b[1], sel=sel[0], out=a1muxb1);
    Mux(a=c[1], b=d[1], sel=sel[0], out=c1muxd1);
    Mux(a=a1muxb1, b=c1muxd1, sel=sel[1], out=out[1]);

    Mux(a=a[2], b=b[2], sel=sel[0], out=a2muxb2);
    Mux(a=c[2], b=d[2], sel=sel[0], out=c2muxd2);
    Mux(a=a2muxb2, b=c2muxd2, sel=sel[1], out=out[2]);

    Mux(a=a[3], b=b[3], sel=sel[0], out=a3muxb3);
    Mux(a=c[3], b=d[3], sel=sel[0], out=c3muxd3);
    Mux(a=a3muxb3, b=c3muxd3, sel=sel[1], out=out[3]);

    Mux(a=a[4], b=b[4], sel=sel[0], out=a4muxb4);
    Mux(a=c[4], b=d[4], sel=sel[0], out=c4muxd4);
    Mux(a=a4muxb4, b=c4muxd4, sel=sel[1], out=out[4]);

    Mux(a=a[5], b=b[5], sel=sel[0], out=a5muxb5);
    Mux(a=c[5], b=d[5], sel=sel[0], out=c5muxd5);
    Mux(a=a5muxb5, b=c5muxd5, sel=sel[1], out=out[5]);

    Mux(a=a[6], b=b[6], sel=sel[0], out=a6muxb6);
    Mux(a=c[6], b=d[6], sel=sel[0], out=c6muxd6);
    Mux(a=a6muxb6, b=c6muxd6, sel=sel[1], out=out[6]);

    Mux(a=a[7], b=b[7], sel=sel[0], out=a7muxb7);
    Mux(a=c[7], b=d[7], sel=sel[0], out=c7muxd7);
    Mux(a=a7muxb7, b=c7muxd7, sel=sel[1], out=out[7]);

    Mux(a=a[8], b=b[8], sel=sel[0], out=a8muxb8);
    Mux(a=c[8], b=d[8], sel=sel[0], out=c8muxd8);
    Mux(a=a8muxb8, b=c8muxd8, sel=sel[1], out=out[8]);

    Mux(a=a[9], b=b[9], sel=sel[0], out=a9muxb9);
    Mux(a=c[9], b=d[9], sel=sel[0], out=c9muxd9);
    Mux(a=a9muxb9, b=c9muxd9, sel=sel[1], out=out[9]);
    
    Mux(a=a[10], b=b[10], sel=sel[0], out=a10muxb10);
    Mux(a=c[10], b=d[10], sel=sel[0], out=c10muxd10);
    Mux(a=a10muxb10, b=c10muxd10, sel=sel[1], out=out[10]);
    
    Mux(a=a[11], b=b[11], sel=sel[0], out=a11muxb11);
    Mux(a=c[11], b=d[11], sel=sel[0], out=c11muxd11);
    Mux(a=a11muxb11, b=c11muxd11, sel=sel[1], out=out[11]);
    
    Mux(a=a[12], b=b[12], sel=sel[0], out=a12muxb12);
    Mux(a=c[12], b=d[12], sel=sel[0], out=c12muxd12);
    Mux(a=a12muxb12, b=c12muxd12, sel=sel[1], out=out[12]);
    
    Mux(a=a[13], b=b[13], sel=sel[0], out=a13muxb13);
    Mux(a=c[13], b=d[13], sel=sel[0], out=c13muxd13);
    Mux(a=a13muxb13, b=c13muxd13, sel=sel[1], out=out[13]);
    
    Mux(a=a[14], b=b[14], sel=sel[0], out=a14muxb14);
    Mux(a=c[14], b=d[14], sel=sel[0], out=c14muxd14);
    Mux(a=a14muxb14, b=c14muxd14, sel=sel[1], out=out[14]);

    Mux(a=a[15], b=b[15], sel=sel[0], out=a15muxb15);
    Mux(a=c[15], b=d[15], sel=sel[0], out=c15muxd15);
    Mux(a=a15muxb15, b=c15muxd15, sel=sel[1], out=out[15]);
}